let db;
let SQL;

// Kh·ªüi t·∫°o SQLite v√† ki·ªÉm tra d·ªØ li·ªáu t·ª´ IndexedDB
initSqlJs({
  locateFile: file => `https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.6.2/${file}`
}).then(SQLLib => {
  SQL = SQLLib;

  localforage.getItem("userDB").then(buffer => {
    if (buffer) {
      db = new SQL.Database(new Uint8Array(buffer));
      document.getElementById("fileSelect").style.display = "none";
      loadClasses();
    }
  });

  document.getElementById("dbfile").addEventListener("change", event => {
    const reader = new FileReader();
    reader.onload = function () {
      const uint8array = new Uint8Array(reader.result);
      db = new SQL.Database(uint8array);
      localforage.setItem("userDB", uint8array);
      document.getElementById("fileSelect").style.display = "none";
      loadClasses();
    };
    reader.readAsArrayBuffer(event.target.files[0]);
  });
});

// H√†m ƒë·ªÉ l∆∞u c√°c thay ƒë·ªïi c∆° s·ªü d·ªØ li·ªáu
function saveToLocal() {
  if (db) {
    const data = db.export();
    localforage.setItem("userDB", data);
  }
}



// ƒê·ªãnh d·∫°ng ng√†y dd-mm-yy
function formatDate(isoDate) {
  const d = new Date(isoDate);
  const dd = String(d.getDate()).padStart(2, '0');
  const mm = String(d.getMonth() + 1).padStart(2, '0');
  const yy = String(d.getFullYear()).slice(-2);
  return `${dd}-${mm}-${yy}`;
}

function loadClasses() {
  const tabs = document.getElementById("tabs");
  const contents = document.getElementById("tabContents");
  tabs.innerHTML = "";
  contents.innerHTML = "";

  let classes;
  try {
    classes = db.exec("SELECT class_id, class_name FROM Classes");
  } catch (err) {
    tabs.innerHTML = "<p>L·ªói: " + err.message + "</p>";
    return;
  }

  if (!classes.length) {
    tabs.innerHTML = "<p>Kh√¥ng c√≥ l·ªõp h·ªçc n√†o.</p>";
    return;
  }

  classes[0].values.forEach(([classId, className], index) => {
    const tabBtn = document.createElement("div");
    tabBtn.className = "tab-button" + (index === 0 ? " active" : "");
    tabBtn.textContent = className;
    tabBtn.dataset.classId = classId;
    tabBtn.onclick = () => switchTab(classId);
    tabs.appendChild(tabBtn);

    const contentDiv = document.createElement("div");
    contentDiv.className = "tab-content" + (index === 0 ? " active" : "");
    contentDiv.id = `tab-${classId}`;
    contents.appendChild(contentDiv);

    if (index === 0) showClassData(classId);
  });
}

function switchTab(classId) {
  document.querySelectorAll(".tab-button").forEach(btn => {
    btn.classList.toggle("active", btn.dataset.classId == classId);
  });
  document.querySelectorAll(".tab-content").forEach(div => {
    div.classList.toggle("active", div.id === `tab-${classId}`);
  });
  showClassData(classId);
}


// Hi·ªÉn th·ªã b·∫£ng danh s√°ch h·ªçc sinh
function showClassData(classId) {
  const container = document.getElementById(`tab-${classId}`);
  container.innerHTML = "<p>ƒêang t·∫£i...</p>";

  try {
    // ‚úÖ L·∫•y danh s√°ch h·ªçc sinh
    const studentResult = db.exec(`
      SELECT student_id, student_name FROM Students WHERE class_id = ${classId}
    `);
    const students = studentResult[0]?.values || [];

    // ‚úÖ L·∫•y danh s√°ch ng√†y ƒëi·ªÉm danh
    const datesResult = db.exec(`
      SELECT DISTINCT attendance_date FROM Attendance
      WHERE class_id = ${classId} AND status = 1
      ORDER BY attendance_date ASC
    `);
    const allDates = datesResult[0]?.values.map(r => r[0]) || [];

    // ‚úÖ L·∫•y th√¥ng tin l·ªõp
    const classInfoRes = db.exec(`
      SELECT class_name, class_hocphi, class_time, class_diadiem
      FROM Classes
      WHERE class_id = ${classId}
    `);
    const [class_name, class_hocphi, class_time, class_diadiem] = classInfoRes[0]?.values[0] || [];

    // ‚úÖ T·∫°o d√≤ng th√¥ng tin l·ªõp
    const infoDiv = document.createElement("div");
    infoDiv.style.margin = "10px 0";
    infoDiv.style.fontWeight = "normal";
    infoDiv.style.padding = "10px";
    infoDiv.style.background = "#f1f9ff";
    infoDiv.style.border = "1px solid #ccc";
    infoDiv.style.borderRadius = "6px";
    infoDiv.style.textAlign = "center";
    infoDiv.textContent =
      `L·ªõp: ${class_name} - T·ªïng s·ªë: ${students.length} h·ªçc sinh - H·ªçc ph√≠: ${Number(class_hocphi).toLocaleString()}‚Ç´ - Th·ªùi gian: ${class_time} - ƒê·ªãa ƒëi·ªÉm: ${class_diadiem}`;

    // ‚úÖ T·∫°o b·∫£ng
    const table = document.createElement("table");
    table.border = "1";
    table.cellPadding = "5";
    table.style.borderCollapse = "collapse";
    table.style.minWidth = "100%";
    table.style.overflowX = "auto";

    const thead = document.createElement("thead");
    const headRow = document.createElement("tr");
    ["H·ªç v√† t√™n", "S·ªë bu·ªïi", "S·ªë ti·ªÅn", ...allDates.map(formatDate)].forEach(title => {
      const th = document.createElement("th");
      th.textContent = title;
      headRow.appendChild(th);
    });
    thead.appendChild(headRow);
    table.appendChild(thead);

    const tbody = document.createElement("tbody");

    for (let index = 0; index < students.length; index++) {
      const [student_id, student_name] = students[index];
      const row = document.createElement("tr");

      // ‚úÖ T√¥ m√†u xen k·∫Ω
      row.style.backgroundColor = index % 2 === 0 ? "#ffffff" : "#f0faff";

      // H·ªç v√† t√™n
      const tdName = document.createElement("td");
      tdName.textContent = student_name;
      row.appendChild(tdName);

      // S·ªë bu·ªïi ƒëi·ªÉm danh
      const buoiRes = db.exec(`
        SELECT COUNT(*) FROM Attendance
        WHERE student_id = ${student_id} AND class_id = ${classId} AND status = 1
      `);
      const soBuoi = buoiRes[0]?.values[0][0] || 0;

      const tdBuoi = document.createElement("td");
      tdBuoi.textContent = soBuoi;
      tdBuoi.style.textAlign = "center";
      row.appendChild(tdBuoi);

      // S·ªë ti·ªÅn = s·ªë bu·ªïi x h·ªçc ph√≠
      const soTien = soBuoi * class_hocphi;
      const tdTien = document.createElement("td");
      tdTien.textContent = soTien.toLocaleString() + " ƒë";
      tdTien.style.textAlign = "center";
      row.appendChild(tdTien);

      // C·ªôt c√°c ng√†y ƒëi·ªÉm danh
      for (const date of allDates) {
        const ddRes = db.exec(`
          SELECT 1 FROM Attendance
          WHERE student_id = ${student_id} AND class_id = ${classId}
          AND attendance_date = '${date}' AND status = 1
        `);
        const td = document.createElement("td");
        td.style.textAlign = "center";

        if (ddRes.length > 0) {
          td.textContent = "üü¢";
        } else {
          td.textContent = "‚ùå";
          td.style.color = "red";
        }

        row.appendChild(td);
      }

      tbody.appendChild(row);
    }

    table.appendChild(tbody);

    // ‚úÖ Hi·ªÉn th·ªã l√™n giao di·ªán
    container.innerHTML = "";
    container.appendChild(infoDiv);   // d√≤ng th√¥ng tin l·ªõp
    container.appendChild(table);     // b·∫£ng h·ªçc sinh
  } catch (err) {
    container.innerHTML = "<p style='color:red'>L·ªói hi·ªÉn th·ªã d·ªØ li·ªáu: " + err.message + "</p>";
  }
}


// ‚úÖ H√†m x·ª≠ l√Ω m·ªü menu (cho mobile)
document.addEventListener("DOMContentLoaded", () => {
  const toggleBtn = document.getElementById("menuToggle");
  const menuBar = document.querySelector(".menu-bar");

  if (toggleBtn && menuBar) {
    toggleBtn.addEventListener("click", () => {
      menuBar.classList.toggle("open");
    });
  }
});

// ‚úÖ H√†m m·ªü/ƒë√≥ng submenu (cho iPhone)
function toggleSubmenu(el) {
  const li = el.parentElement;
  const openMenus = document.querySelectorAll(".has-submenu.open");

  openMenus.forEach(menu => {
    if (menu !== li) menu.classList.remove("open");
  });

  li.classList.toggle("open");
}

// X·ª≠ l√Ω n√∫t ƒêi·ªÉm danh v√† Thu h·ªçc ph√≠
function handleDiemDanh() {
  alert("üëâ Ch·ª©c nƒÉng ƒêi·ªÉm danh ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
}

function handleThuHocPhi() {
  alert("üëâ Ch·ª©c nƒÉng Thu h·ªçc ph√≠ ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.");
}


// T·ª± ƒë·ªông ƒë√≥n menu con khi ch·∫°m ra ngo√†i
// ƒê√≥ng t·∫•t c·∫£ submenu khi click ra ngo√†i
document.addEventListener("click", function (e) {
  const isMenuToggle = e.target.closest(".has-submenu");
  if (!isMenuToggle) {
    document.querySelectorAll(".has-submenu.open").forEach(el => {
      el.classList.remove("open");
    });
  }
});
document.addEventListener("touchstart", function (e) {
  const isMenuToggle = e.target.closest(".has-submenu");
  if (!isMenuToggle) {
    document.querySelectorAll(".has-submenu.open").forEach(el => {
      el.classList.remove("open");
    });
  }
});


function toggleSubmenu(el) {
  const li = el.closest(".has-submenu");

  // N·∫øu menu ƒëang m·ªü ‚Üí ƒë√≥ng l·∫°i
  const isOpen = li.classList.contains("open");

  // ƒê√≥ng t·∫•t c·∫£ menu kh√°c
  document.querySelectorAll(".has-submenu.open").forEach(menu => {
    menu.classList.remove("open");
  });

  // N·∫øu menu ƒë√≥ ch∆∞a m·ªü th√¨ m·ªü n√≥
  if (!isOpen) {
    li.classList.add("open");
  }
}

// ƒê√≥ng t·∫•t c·∫£ menu khi click/ch·∫°m ra ngo√†i
document.addEventListener("click", function (e) {
  if (!e.target.closest(".has-submenu")) {
    document.querySelectorAll(".has-submenu.open").forEach(menu => {
      menu.classList.remove("open");
    });
  }
});

document.addEventListener("touchstart", function (e) {
  if (!e.target.closest(".has-submenu")) {
    document.querySelectorAll(".has-submenu.open").forEach(menu => {
      menu.classList.remove("open");
    });
  }
});

// Khi ch·ªçn menu con, ·∫©n t·∫•t c·∫£ menu cha
function onMenuAction(action) {
  // ·∫®n menu ƒëang m·ªü
  document.querySelectorAll(".has-submenu.open").forEach(menu => {
    menu.classList.remove("open");
  });

  // Th·ª±c hi·ªán h√†nh ƒë·ªông t√πy theo ID
  switch (action) {
    case "them-lop":
      alert("üëâ Th√™m l·ªõp");
      break;
    case "sua-lop":
      alert("üëâ S·ª≠a th√¥ng tin l·ªõp");
      break;
    case "xoa-lop":
      alert("üëâ X√≥a l·ªõp");
      break;
    case "them-hocsinh":
      alert("üëâ Th√™m h·ªçc sinh");
      break;
    case "sua-hocsinh":
      alert("üëâ S·ª≠a th√¥ng tin h·ªçc sinh");
      break;
    case "xoa-hocsinh":
      alert("üëâ X√≥a h·ªçc sinh");
      break;
    case "xuat-excel":
      alert("üëâ Xu·∫•t file excel");
      break;
    case "xuat-sqlite":
      alert("üëâ Xu·∫•t file sqlite");
      break;
    case "xuat-pdf":
      alert("üëâ Xu·∫•t file pdf");
      break;
    default:
      alert("‚ö†Ô∏è Ch∆∞a x·ª≠ l√Ω: " + action);
  }
}

document.addEventListener("click", function (e) {
  const clickedInsideMenu = e.target.closest(".menu-bar") || e.target.closest("#menuToggle");

  if (!clickedInsideMenu) {
    // Thu menu con
    document.querySelectorAll(".has-submenu.open").forEach(menu => {
      menu.classList.remove("open");
    });

    // N·∫øu ƒëang tr√™n thi·∫øt b·ªã nh·ªè ‚Üí ·∫©n lu√¥n menu ch√≠nh
    const menuBar = document.querySelector(".menu-bar");
    if (window.innerWidth <= 768 && menuBar.classList.contains("open")) {
      menuBar.classList.remove("open");
    }
  }
});

document.addEventListener("touchstart", function (e) {
  const touchedInsideMenu = e.target.closest(".menu-bar") || e.target.closest("#menuToggle");

  if (!touchedInsideMenu) {
    // Thu menu con
    document.querySelectorAll(".has-submenu.open").forEach(menu => {
      menu.classList.remove("open");
    });

    // ·∫®n menu ch√≠nh n·∫øu ƒëang m·ªü tr√™n thi·∫øt b·ªã nh·ªè
    const menuBar = document.querySelector(".menu-bar");
    if (window.innerWidth <= 768 && menuBar.classList.contains("open")) {
      menuBar.classList.remove("open");
    }
  }
});



// Form ƒêi·ªÉm danh
function handleDiemDanh() {
  document.getElementById("diemdanhModal").style.display = "flex";

  // T·ª± ƒë·ªông ch·ªçn h√¥m nay
  const today = new Date().toISOString().split("T")[0];
  document.getElementById("dd-date").value = today;

  // T·∫£i danh s√°ch l·ªõp v√†o select
  const classSelect = document.getElementById("dd-class");
  classSelect.innerHTML = "";

  const result = db.exec(`SELECT class_id, class_name FROM Classes`);
  const allClasses = result[0].values;

  // T√¨m class_id ƒëang ƒë∆∞·ª£c ch·ªçn trong tabs
  const activeTab = document.querySelector(".tab-button.active");
  const activeClassId = activeTab ? activeTab.dataset.classId : null;

  allClasses.forEach(([id, name]) => {
    const opt = document.createElement("option");
    opt.value = id;
    opt.textContent = name;

    // ‚úÖ T·ª± ƒë·ªông ch·ªçn l·ªõp ƒëang ƒë∆∞·ª£c ch·ªçn ·ªü tab
    if (id == activeClassId) {
      opt.selected = true;
    }

    classSelect.appendChild(opt);
  });

  loadStudentsForClass(); // Load h·ªçc sinh theo l·ªõp v·ª´a ch·ªçn
}


function closeDiemDanh() {
  document.getElementById("diemdanhModal").style.display = "none";
}

function loadStudentsForClass() {
  const classId = document.getElementById("dd-class").value;
  const studentSelect = document.getElementById("dd-student");
  studentSelect.innerHTML = "";

  const result = db.exec(`SELECT student_id, student_name FROM Students WHERE class_id = ${classId}`);
  result[0].values.forEach(([id, name]) => {
    const opt = document.createElement("option");
    opt.value = id;
    opt.textContent = name;
    studentSelect.appendChild(opt);
  });
}

function submitDiemDanh(status) {
  const classId = document.getElementById("dd-class").value;
  const studentSelect = document.getElementById("dd-student");
  const studentId = studentSelect.value;
  const date = document.getElementById("dd-date").value;

  // Xo√° b·∫£n ghi c≈© n·∫øu c√≥
  const check = db.exec(`
    SELECT * FROM Attendance
    WHERE class_id = ${classId} AND student_id = ${studentId} AND attendance_date = '${date}'
  `);
  if (check.length > 0) {
    db.run(`
      DELETE FROM Attendance
      WHERE class_id = ${classId} AND student_id = ${studentId} AND attendance_date = '${date}'
    `);
  }

  // Ch·ªâ th√™m m·ªõi n·∫øu kh√¥ng ph·∫£i h·ªßy
  if (status === 0 || status === 1) {
    db.run(`
      INSERT INTO Attendance (class_id, student_id, attendance_date, status)
      VALUES (${classId}, ${studentId}, '${date}', ${status})
    `);
  }
 // ‚úÖ L∆∞u l·∫°i thay ƒë·ªïi
  saveToLocal();

  
  // ‚úÖ C·∫≠p nh·∫≠t b·∫£ng ngay sau m·ªói ƒëi·ªÉm danh
  showClassData(classId);

  // ‚úÖ Chuy·ªÉn sang h·ªçc sinh ti·∫øp theo ho·∫∑c k·∫øt th√∫c
  const nextIndex = studentSelect.selectedIndex + 1;
  if (nextIndex < studentSelect.options.length) {
    studentSelect.selectedIndex = nextIndex;
  } else {
    // ‚úÖ C·∫≠p nh·∫≠t b·∫£ng r·ªìi m·ªõi th√¥ng b√°o
    setTimeout(() => {
      alert("‚úÖ ƒê√£ ƒëi·ªÉm danh xong");
      closeDiemDanh();
    }, 10);
  }
}
